
# 见resources/banner.txt文件
# 可以在网站生成banner： http://patorjk.com/software/taag/#p=display&f=Graffiti&t=Coin%20Snow
#spring.main.banner-mode=off

# ===============================
# = 发布上线：
# = 1. 修改此.properties文件里面的端口号server.port=80和spring.cloud.config.profile=prod
# ===============================

#
# ===============================
# = Basic
# ===============================
spring.application.name=bytedesk
# 本地测试
server.port=8000

#debug=true

#
# ===============================
# = Config
# = POST方式调用刷新配置：
# 1. http://47.99.38.99:8000/actuator/refresh
# 2. http://47.98.54.86:8000/actuator/refresh
# ===============================
# 本地测试
#spring.cloud.config.profile=cloud
# 本地测试
spring.cloud.config.profile=dev
# 发布上线
#spring.cloud.config.profile=prod
# 大学长测试
#spring.cloud.config.profile=dxz
# 吾协云
#spring.cloud.config.profile=wxy
#
#spring.cloud.config.label=master
#spring.cloud.config.uri=http://localhost:8002
spring.cloud.config.uri=http://47.106.239.170:8002
# 开启通过服务来访问config server的功能
#spring.cloud.config.discovery.enabled=true
# 指定config server注册的服务名
#spring.cloud.config.discovery.service-id=configserver
# 优先判断config server获取是否正常，减少等待时间
spring.cloud.config.fail-fast=true
# 启动失败重试
#spring.cloud.config.retry.multiplier=


# ===============================
# = spring-boot-starter-security
# ===============================
spring.cloud.config.username=user
spring.cloud.config.password=6QUGBtNZ9gs8eYsi

# ===============================
# = Eureka
# ===============================
#eureka.client.service-url.defaultZone=http://localhost:8001/eureka/
eureka.client.service-url.defaultZone=http://47.106.239.170:8001/eureka/


#The bean 'messageHandlerMethodFactory', defined in class path resource [org/springframework/cloud/stream/config/BinderFactoryConfiguration.class],
# could not be registered. A bean with that name has already been defined in class path resource [com/bytedesk/app/rabbitmq/RabbitConfig.class]
# and overriding is disabled.
spring.main.allow-bean-definition-overriding=true

# ===============================
# = spring-boot-starter-security
# ===============================
#spring.security.user.name=user
#spring.security.user.password=password
# 不起作用
#spring.security.oauth2.client.access-token-validity-seconds=60*60*24*30

# ===============================
# = spring-jackson
# ===============================
#spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
#spring.jpa.open-in-view=true

#
# ===============================
# = Profiles
# = 对不同环境或者指令来读取不同的配置文件
# ===============================
#spring.profiles.active=dev

# =================================================================================================
# = 下面迁移到config server
# =================================================================================================

#
# ===============================
# = Logging
# ===============================
#logging.level.org.springframework.web=DEBUG
#logging.level.org.springframework.security=DEBUG
#logging.level.com.bytedesk=DEBUG
#logging.file=bytedesk.log
# sleuth
#logging.level.org.springframework.cloud.sleuth=DEBUG

#
# ===============================
# = ZipKin
# = 文档：https://cloud.spring.io/spring-cloud-static/spring-cloud-sleuth/2.0.0.M9/multi/multi__sending_spans_to_zipkin.html
# = 后台数据：http://47.98.54.86:9411/zipkin/
# = TODO: 增加security，限制访问
# ===============================
spring.zipkin.baseUrl=http://47.98.54.86:9411/
# web, rabbit, or kafka
spring.zipkin.sender.type=web
spring.sleuth.sampler.probability=1.0


#
# ===============================
# = ZooKeeper
# ===============================
zk.url=47.98.54.86:2181



#
# ===============================
# = Sqlite
# ===============================





#
# ===============================
#  Secure Spring Boot application with Let's Encrypt
# https://bach.mystories.vn/2017/12/24/secure-springboot-with-letsencrypt/
#
# 注：下面的配置全面作废，基于nginx实现https访问
## 发布上线https:
## https://www.heydari.be/spring-boot-application-secured-by-a-lets-encrypt-certificate/
##   因为spring  boot不能使用pem证书，故转换为p12文件，切换到/etc/letsencrypt/live/bytedesk.com文件夹：
##   openssl pkcs12 -export -in fullchain.pem -inkey privkey.pem  -out keystore.p12  -name bytedesk -CAfile chain.pem -caname root
## 证书更新：./certbot-auto renew，然后重新执行上面 命令更新p12文件
## 检查网站https是否正常：https://www.ssllabs.com/ssltest/analyze.html
## ===============================
##server.ssl.enabled = true
##server.ssl.key-store = /etc/letsencrypt/live/bytedesk.com/keystore.p12
##server.ssl.key-store-password = 123456
##server.ssl.key-store-type = PKCS12
##server.ssl.key-alias = bytedesk
##server.ssl.key-password = 123456

