var geoUtils = function() {
    requestInProgress = !1,
        concurrentQueue = [];
    var a = window.location.hostname;
    geoLocateQueue = function(a, b) {
        for (; concurrentQueue.length > 0;) {
            var c = concurrentQueue.shift();
            "function" == typeof c[b] && c[b](a)
        }
    };
    var b = {
        "www.zendesk.hk": {
            continent: "AS",
            country: "HK",
            region: "APAC",
            language: "zh-tw"
        }
    };
    return getGeoData = function() {
        return new Promise(function(a, b) {
            var c = sessionStorage.getItem("geoData");
            return c ? a(JSON.parse(c)) : requestInProgress ? void concurrentQueue.push({
                resolve: a,
                reject: b
            }) : (requestInProgress = !0, void $.ajax({
                //webutils.appUrl("geo.json"),
                url: '/js/zd/geo.json',
                type: "GET",
                success: function(b) {
                    try {
                        b.disableCache || sessionStorage.setItem("geoData", JSON.stringify(b))
                    } catch(a) {}
                    a(b),
                        geoLocateQueue(b, "resolve")
                },
                error: function(a, c, d) {
                    console.error(d),
                        b(d),
                        geoLocateQueue(d, "reject")
                },
                complete: function() {
                    requestInProgress = !1
                }
            }))
        })
    },
        isUserInContinentCountry = function(c, d, e) {
            if (c) return d = d || !1,
                e = e || !1,
                new Promise(function(f, g) {
                    b[a] && (c === b[a].continent && d === b[a].country ? f(!0) : d || c !== b[a].continent || f(!0)),
                        geoUtils.getGeoData().then(function(a) { ! a && e && f(!0),
                            f(d ? a.country_code === d: a.continent_code === c)
                        }).
                        catch(function(a) {
                            console.error(a),
                                g(a)
                        })
                })
        },
        isUserInRegion = function(c) {
            if (c) return new Promise(function(d, e) {
                b[a] && c === b[a].region && d(!0),
                    geoUtils.getGeoData().then(function(a) {
                        a || d(!1),
                            d(c && a.region === c ? !0 : !1)
                    }).
                    catch(function(a) {
                        e(a)
                    })
            })
        },
        domainLanguage = function() {
            return b[a] && b[a].hasOwnProperty("language") ? b[a].language: "en"
        },
        {
            domainLanguage: domainLanguage,
            getGeoData: getGeoData,
            isUserInContinentCountry: isUserInContinentCountry,
            isUserInRegion: isUserInRegion
        }
} ();